@model Register

<!-- Bootstrap, Font Awesome, and Three.js -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>

<style>
    body {
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        overflow-y: auto;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #f0f2f5;
    }

    #threejs-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    .register-container {
        max-width: 500px;
        margin: 5% auto;
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        padding: 30px;
        backdrop-filter: blur(5px);
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

    .form-header {
        text-align: center;
        margin-bottom: 30px;
    }

        .form-header h2 {
            color: #3a3a3a;
            font-weight: 700;
        }

        .form-header i {
            font-size: 2.5rem;
            color: #4e73df;
            margin-bottom: 15px;
        }

    .form-control {
        border-radius: 8px;
        padding: 12px 15px;
        border: 1px solid #ddd;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.25rem rgba(78, 115, 223, 0.25);
        }

    .btn-primary {
        background-color: #4e73df;
        border: none;
        border-radius: 8px;
        padding: 12px;
        font-weight: 600;
        width: 100%;
        transition: all 0.3s;
    }

        .btn-primary:hover {
            background-color: #3a5bd9;
            transform: translateY(-2px);
        }

    .input-group-text {
        background-color: #f8f9fa;
        border-radius: 8px 0 0 8px !important;
    }

    .password-toggle {
        cursor: pointer;
        background-color: #f8f9fa;
        border-radius: 0 8px 8px 0 !important;
    }
</style>

<!-- Three.js Background -->
<div id="threejs-background"></div>

<div class="container">
    <div class="register-container">
        <div class="form-header">
            <i class="fas fa-user-plus"></i>
            <h2>Create Your Account</h2>
            <p class="text-muted">Join our community today</p>
        </div>

        <form asp-action="Register" method="post">
            <div asp-validation-summary="All" class="alert alert-danger"></div>

            <div class="form-group mb-4">
                <label asp-for="Name" class="form-label fw-bold">Full Name</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                    <input asp-for="Name" class="form-control" placeholder="Enter your full name" />
                </div>
                <span asp-validation-for="Name" class="text-danger small"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="Email" class="form-label fw-bold">Email Address</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                    <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                </div>
                <span asp-validation-for="Email" class="text-danger small"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="Password" class="form-label fw-bold">Password</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                    <input asp-for="Password" class="form-control" id="Password" placeholder="Create a password" />
                    <span class="input-group-text password-toggle" onclick="togglePassword('Password')">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <span asp-validation-for="Password" class="text-danger small"></span>
                <div class="form-text">Use 6+ characters with a mix of letters and numbers.</div>
            </div>

            <div class="form-group mb-4">
                <label asp-for="PasswordConfirmed" class="form-label fw-bold">Confirm Password</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                    <input asp-for="PasswordConfirmed" class="form-control" id="PasswordConfirmed" placeholder="Confirm your password" />
                    <span class="input-group-text password-toggle" onclick="togglePassword('PasswordConfirmed')">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <span asp-validation-for="PasswordConfirmed" class="text-danger small"></span>
            </div>

            <button type="submit" class="btn btn-primary btn-lg">
                <i class="fas fa-user-plus me-2"></i> Register Now
            </button>

            <div class="text-center mt-3">
                <span class="text-muted">Already have an account? <a href="/Login">Sign In</a></span>
            </div>
        </form>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Scripts Section for Validation -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    function initThreeJS() {
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });

        renderer.setSize(window.innerWidth, window.innerHeight);
        document.getElementById('threejs-background').appendChild(renderer.domElement);

        camera.position.z = 30;

        const particlesGeometry = new THREE.BufferGeometry();
        const particleCount = 1000;
        const posArray = new Float32Array(particleCount * 3);

        for (let i = 0; i < particleCount * 3; i++) {
            posArray[i] = (Math.random() - 0.5) * 100;
        }

        particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));

        const particlesMaterial = new THREE.PointsMaterial({
            size: 0.2,
            color: 0x4e73df,
            transparent: true,
            opacity: 0.8,
            blending: THREE.AdditiveBlending
        });

        const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
        scene.add(particlesMesh);

        function animate() {
            requestAnimationFrame(animate);
            particlesMesh.rotation.x += 0.0005;
            particlesMesh.rotation.y += 0.0005;
            renderer.render(scene, camera);
        }

        animate();

        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });
    }

    function togglePassword(fieldId) {
        const input = document.getElementById(fieldId);
        const icon = input.nextElementSibling.querySelector('i');

        if (input.type === "password") {
            input.type = "text";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        } else {
            input.type = "password";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        }
    }

    window.onload = function () {
        initThreeJS();

        const container = document.querySelector('.register-container');
        container.style.opacity = 1;
        container.style.transform = 'translateY(0)';
    };
</script>
