@using small_todo_application.ViewModel @* callin from view mode Paginated list *@
@model PaginatedList<BlogPost>
@* List + pagination show we are using in this way if only need list we can add list *@
@{
    ViewData["Title"] = "Blog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-4">
    <h2 class="text-center mb-5">Latest Blog Posts</h2>

    <div class="row">
        @foreach (var post in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100 shadow-sm">
                    @if (post.ImageData != null)
                    {
                        <div class="card-img-container" style="height: 200px; overflow: hidden;">
                            <img class="card-img-top h-100 object-fit-cover"
                                 src="data:@post.ImageMimeType;base64,@Convert.ToBase64String(post.ImageData)"
                                 alt="@post.Title" />
                        </div>
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@post.Title</h5>
                        <div class="card-text mb-2 text-muted small">
                            @{
                                var plainText = System.Text.RegularExpressions.Regex.Replace(post.Content, "<[^>]*>", "");
                                var preview = plainText.Length > 100 ? plainText.Substring(0, 100) + "..." : plainText;
                            }
                            @preview
                        </div>
                        <div class="mt-auto">
                            <a asp-controller="Home" asp-action="Details" asp-route-id="@post.Id"
                               class="btn btn-primary stretched-link">Read More</a>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <small class="text-muted">Posted on @post.CreatedAt.ToString("MMM dd, yyyy")</small>
                    </div>
                </div>
            </div>
        }
    </div>
    @* This code is for pagination  *@
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Blog" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Blog" asp-route-page="@i">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Blog" asp-route-page="@(Model.PageIndex + 1)">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>

</div>

<style>
    /* Custom styles */
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 8px;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

    .card-img-container {
        background-color: #f8f9fa;
    }

    .object-fit-cover {
        object-fit: cover;
        width: 100%;
    }

    .card-title {
        font-weight: 600;
        color: #2c3e50;
    }

    .stretched-link::after {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        content: "";
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

    .pagination .page-link {
        color: #007bff;
    }

        .pagination .page-link:hover {
            color: #0056b3;
        }
</style>